{"version":3,"sources":["media/triangles_Red.png","media/triangles_Blue.png","theme.js","components/Banner.js","components/MobileBanner.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","createMuiTheme","palette","primary","main","secondary","typography","fontFamily","join","responsiveFontSizes","useStyles","makeStyles","root","backgroundColor","height","flexWrap","title","padding","maxHeight","backgroundImage","Triangle","border","backgroundSize","backgroundRepeat","title2","TriangleBlue","backgroundPosition","titleText","color","text","textAlign","Banner","classes","Grid","container","className","spacing","item","md","sm","xs","style","Typography","variant","Height","position","bottom","right","width","MobileBanner","MobileLayout","DesktopLayout","App","matches","useMediaQuery","breakpoints","down","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.90a2b693.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/triangles_Red.aa9c1556.png\";","module.exports = __webpack_public_path__ + \"static/media/triangles_Blue.68dc3c93.png\";","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\n\r\nlet theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#f9f4a2',\r\n          },\r\n          secondary: {\r\n            main: '#131c3f',\r\n          },\r\n    },\r\n    typography: {\r\n      fontFamily: [\r\n        //'Nunito',\r\n        //'Roboto',\r\n        'Galada',\r\n        //'Arial',\r\n        'sans-serif'\r\n      ].join(','),\r\n    }\r\n})\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default theme;","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Triangle from \"../media/triangles_Red.png\"\r\nimport TriangleBlue from \"../media/triangles_Blue.png\"\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#FFCB51\",\r\n    height: \"100vh\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n\r\n  title:{\r\n    padding: \"7px\",\r\n    maxHeight: \"100vh\",\r\n    backgroundImage: `url(${Triangle})`,\r\n    border:\"solid 5px white\",\r\n    backgroundSize: \"80% 100%\",\r\n    backgroundRepeat: \"no-repeat\"\r\n  },\r\n  title2:{\r\n    padding: \"7px\",\r\n    maxHeight: \"100vh\",\r\n    backgroundImage: `url(${TriangleBlue})`,\r\n    border:\"solid 5px white\",\r\n    backgroundSize: \"80% 100%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right\",\r\n  },\r\n  titleText:{\r\n    fontFamily: \"'Chelsea Market', cursive\",\r\n    color: \"#430C05\",\r\n  },\r\n  text:{\r\n    fontFamily: \"'Oswald', sans-serif\",\r\n    color: \"#00363D\",\r\n    textAlign: \"right\",\r\n  },\r\n})\r\n\r\nconst Banner = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={0}>\r\n      <Grid item md={6} sm={6} xs={12} className={classes.title}>\r\n      <Grid container>\r\n        <Grid item xs={12}\r\n        style={{\r\n          height: \"7vh\",\r\n        }} />\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h1\" className={classes.titleText}>\r\n            Ana\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h1\" className={classes.titleText}>\r\n            Garcia\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      </Grid>\r\n      <Grid item md={6} sm={6} xs={12} className={classes.title2}>\r\n        <Grid>\r\n        <Grid item xs={12}\r\n          style={{\r\n            height: \"54.5vh\",\r\n          }} />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h3\" className={classes.text}>\r\n              Hi! I'm\r\n            </Typography>\r\n            <Typography variant=\"h3\" className={classes.text}>\r\n              a Software\r\n            </Typography>\r\n            <Typography variant=\"h3\" className={classes.text}>\r\n              Development\r\n            </Typography>\r\n            <Typography variant=\"h3\" className={classes.text}>\r\n              student with an\r\n            </Typography>\r\n            <Typography variant=\"h3\" className={classes.text}>\r\n              interest in UI design\r\n            </Typography>\r\n          </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default Banner","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Triangle from \"../media/triangles_Red.png\";\r\nimport TriangleBlue from \"../media/triangles_Blue.png\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: \"#FFCB51\",\r\n    height: \"100vh\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n\r\n  title: {\r\n    padding: \"7px\",\r\n    Height: \"100vh\",\r\n    backgroundImage: `url(${Triangle})`,\r\n    border: \"solid 5px white\",\r\n    backgroundSize: \"80% 100%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n  },\r\n  title2: {\r\n    padding: \"7px\",\r\n    maxHeight: \"100vh\",\r\n    backgroundImage: `url(${TriangleBlue})`,\r\n    border: \"solid 5px white\",\r\n    backgroundSize: \"80% 100%\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"right\",\r\n  },\r\n  titleText: {\r\n    fontFamily: \"'Chelsea Market', cursive\",\r\n    color: \"#430C05\",\r\n  },\r\n  text: {\r\n    fontFamily: \"'Oswald', sans-serif\",\r\n    color: \"#00363D\",\r\n    position: \"absolute\",\r\n    bottom: \"2vh\",\r\n    right: \"2vh\",\r\n    width: \"50vw\",\r\n    textAlign: \"right\",\r\n  },\r\n});\r\n\r\nfunction MobileBanner() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root} spacing={0}>\r\n      <Grid item xs={12} className={classes.title}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          style={{\r\n            height: \"2vh\",\r\n          }}\r\n        />\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h1\" className={classes.titleText}>\r\n            Ana\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h1\" className={classes.titleText}>\r\n            Garcia\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.title2}>\r\n        <Grid>\r\n        <Grid item xs={12}\r\n          style={{\r\n            height: \"25vh\",\r\n          }} />\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h4\" className={classes.text}>\r\n              Hi! I'm a Software Development student with an interest in UI\r\n              design\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default MobileBanner;\r\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport theme from './theme'\nimport Banner from './components/Banner';\nimport MobileBanner from './components/MobileBanner';\n\nimport './App.css';\n\nconst useStyles = makeStyles({\n  root: {\n      height: '100vh',\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n  const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    return (\n      <ThemeProvider theme={theme}>\n         <CssBaseline />\n         <div className={classes.root}>\n          {matches ? <MobileLayout /> : <DesktopLayout />}\n        </div>\n      </ThemeProvider>\n    )\n  }\n\nconst MobileLayout = () => {\nconst classes = useStyles();\nreturn (\n <div className={classes.root}>\n  <MobileBanner />\n </div>\n)\n}\n\nconst DesktopLayout = () => {\nconst classes = useStyles();\nreturn (\n <div className={classes.root}>\n  <Banner />\n </div>\n)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}